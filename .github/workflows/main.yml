name: Build, Package, and Release .NET Framework 4.7.2

on:
  # pull_request:
  #   types: [closed]
  #   branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.TOKEN }}

      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v2.0.0

      - name: Setup NuGet
        uses: nuget/setup-nuget@v2
        with:
          nuget-version: 'latest'

      - name: Restore NuGet packages
        run: nuget restore .\EmailLibrary\EmailLibrary.sln

      - name: Build project
        run: |
          msbuild .\EmailLibrary\EmailLibrary.sln /p:Configuration=Release /p:Platform="Any CPU" /p:TargetFrameworkVersion="v4.7.2"

      - name: Create release directory
        run: mkdir release

      - name: Create library directory
        run: mkdir .\release\library

      - name: Copy build output to library directory
        run: |
          Get-ChildItem -path ".\EmailLibrary\EmailLibrary\bin\Release\" -Recurse -Exclude "*.pdb" | ForEach-Object {
            Try {
                Copy-Item $_ -Destination ".\release\library\"
            } Catch {
                Write-Warning "Could not load assembly: $_"
            }
          }

      - name: Generate Powershell Manifest
        run: |
          $version = ${{ steps.tag_version.outputs.new_tag }}
          $version = $version  -replace 'v', ''
          $moduleSettings = @{
            Path = '.\EmailLibrary\EmailModule\EmailModule.psd1'
            # Script module or binary module file associated with this manifest.
            RootModule = 'EmailModule.psm1'

            # Version number of this module.
            ModuleVersion = $version
            # Supported PSEditions
            CompatiblePSEditions = @('Desktop','Core')

            # ID used to uniquely identify this module
            GUID = '6f8c4c8a-6e0d-4139-836c-f798b30ada92'

            # Author of this module
            Author = 'Brandon Navarro'

            # Company or vendor of this module
            CompanyName = 'None'

            # Copyright statement for this module
            Copyright = '(c) Brandon Navarro. All rights reserved.'

            # Description of the functionality provided by this module
            Description = 'Powershell Module to send Email using MailKit, MimeKit and STARTTLS'

            # Minimum version of the PowerShell engine required by this module
            PowerShellVersion = '5.1'

            # Minimum version of Microsoft .NET Framework required by this module. This prerequisite is valid for the PowerShell Desktop edition only.
            DotNetFrameworkVersion = '4.7.2'

            # Processor architecture (None, X86, Amd64) required by this module
            ProcessorArchitecture = 'Amd64'

            # Functions to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no functions to export.
            FunctionsToExport = 'Send-Email'

            # Cmdlets to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no cmdlets to export.
            CmdletsToExport = 'Send-Email'

            # Variables to export from this module
            VariablesToExport = @()

            # Aliases to export from this module, for best performance, do not use wildcards and do not delete the entry, use an empty array if there are no aliases to export.
            AliasesToExport = @()

            # List of all modules packaged with this module
            ModuleList = 'EmailModule.psm1'

            # List of all files packaged with this module
            FileList = @(
                'EmailLib',
                'EmailModule.psd1',
                'EmailModule.psm1',
                'BouncyCastle.Cryptography.dll',
                'BouncyCastle.Cryptography.xml',
                'EmailLibrary.dll',
                'EmailLibrary.dll.config',
                'MailKit.dll',
                'MailKit.dll.config',
                'MailKit.xml',
                'MimeKit.dll',
                'MimeKit.xml',
                'System.Buffers.dll',
                'System.Buffers.xml',
                'System.Formats.Asn1.dll',
                'System.Formats.Asn1.xml',
                'System.Memory.dll',
                'System.Memory.xml',
                'System.Numerics.Vectors.dll',
                'System.Numerics.Vectors.xml',
                'System.Runtime.CompilerServices.Unsafe.dll',
                'System.Runtime.CompilerServices.Unsafe.xml',
                'System.Threading.Tasks.Extensions.dll',
                'System.Threading.Tasks.Extensions.xml',
                'System.ValueTuple.dll',
                'System.ValueTuple.xml'
            )
          }
          New-ModuleManifest @moduleSettings

      - name: Copy powershell module to release directory
        run: |
          Copy-Item -Path ".\EmailLibrary\EmailModule\EmailModule.psd1" -Destination ".\release\"
          Copy-Item -Path ".\EmailLibrary\EmailModule\EmailModule.psm1" -Destination ".\release\"

      - name: Get File Hashes
        run: |
          Get-ChildItem -path ".\EmailLibrary\EmailLibrary\bin\Release\" -Recurse -Exclude "*.pdb" | ForEach-Object {
            Get-FileHash $_ -Algorithm SHA256 | FL | Out-File -FilePath ".\Hashes.txt" -Append
          }
          Get-FileHash -Path ".\EmailLibrary\EmailModule\EmailModule.psm1" -Algorithm SHA256 | FL | Out-File -FilePath ".\Hashes.txt" -Append
          Get-FileHash -Path ".\EmailLibrary\EmailModule\EmailModule.psd1" -Algorithm SHA256 | FL | Out-File -FilePath ".\Hashes.txt" -Append

      - name: Zip the release directory
        run: Compress-Archive -Path ".\release\*" -DestinationPath "EmailModule.zip"

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1.20.0
        with:
          artifacts: EmailModule.zip,Hashes.txt
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
